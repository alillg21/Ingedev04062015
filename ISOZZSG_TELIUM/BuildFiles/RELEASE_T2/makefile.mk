#*******************************************************************************
#* makefile.mk
#*------------------------------------------------------------------------------
#* Makefile used to generate the Application binaries (GNU ARM format).
#* This file was automatically generated by IngeDev. Please, do not edit!
#*******************************************************************************

#-------------------------------------------------------------------------------
# General constants
#-------------------------------------------------------------------------------
EMPTY :=
SPACE := $(EMPTY) $(EMPTY)

#-------------------------------------------------------------------------------
# Project and file names
#-------------------------------------------------------------------------------
# Project name
PROJECT_NAME    := ISOZZSG_TELIUM
# Compiler version
COMPILER_VERSION	:= GNU ARM 3.4.3 (HWT1/T2)
# Configuration name
CFG_NAME        := RELEASE_T2
# Target file name (without extension)
TRG_FILE_NAME   := SIMAS
# Startup object file name
STARTUP_OBJ_NAME:= cstartup.o
# Mapping file name
MAPPING_DEF_NAME:= mapping.def


#-------------------------------------------------------------------------------
# Directories
#-------------------------------------------------------------------------------
# Binaries directory
BIN_DIR         := Bin
# Object directory
OBJ_DIR         := Obj
# Build files directory
BUILD_FILES_DIR := BuildFiles

#-------------------------------------------------------------------------------
# Input files path for the current configuration
#-------------------------------------------------------------------------------
# Build files path
BUILD_FILES_PATH:= $(BUILD_FILES_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Output files path for the current configuration
#-------------------------------------------------------------------------------
# Object files path
OBJ_PATH        := $(OBJ_DIR)/$(CFG_NAME)
# Binary files path
BIN_PATH        := $(BIN_DIR)/$(CFG_NAME)

#-------------------------------------------------------------------------------
# Compiler, linker, assembler, ...
#-------------------------------------------------------------------------------
# Gnu Compiler executable
CC              := arm-elf-gcc.exe
# Gnu Assembler executable
AS              := arm-elf-as.exe
# Gnu Linker executable
LD              := arm-elf-ld.exe
# Gnu binary file transforming executable
OBJ_COPY        := arm-elf-objcopy.exe
# Gnu binary sections size executable
SIZE            := arm-elf-size.exe
# Gnu binary Obj Dump executable
OBJ_DUMP        := arm-elf-objdump.exe

#-------------------------------------------------------------------------------
# Gnu Win32 tools
#-------------------------------------------------------------------------------
# Remove tool
RM              := rm.exe -fr
# Make directory tool
MKDIR           := mkdir.exe -p
# Copy tool
CP              := cp.exe
# Printf tool
PRINTF          := printf.exe

#-------------------------------------------------------------------------------
# Includes path used in compilation process
#-------------------------------------------------------------------------------
INCLUDES_PATH   := \
-I"Inc" \
-I"uta" \
-I"C:/Users/z/IngeDev7_workspace2/ISOZZSG/str" \
-I"C:/Users/z/IngeDev7_workspace2/ISOZZSG/log" \
-I"C:/Users/z/IngeDev7_workspace2/ISOZZSG/tst" \
-I"C:/Users/z/IngeDev7_workspace2/uta100407/sys" \
-I"C:/Users/z/IngeDev7_workspace2/uta100407/pri" \
-I"C:/Program Files/SDK30/Easy Path to EMV 22.4.1/SDK_Engine/Inc" \
-I"C:/Program Files/SDK30/SDK 9.20.0.01/SDK/inc" \


#-------------------------------------------------------------------------------
# Libraries to be included during link operation
#-------------------------------------------------------------------------------
LIBS            := \
libs/GNU_ARM_RELEASE/RSA.lib \
C:/Program\ Files/SDK30/Easy\ Path\ to\ EMV\ 22.4.1/SDK_Engine/lib_gnu/DEL.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/GTL.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/eft30.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/TPass.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/PinLib_Deprecated.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/trap.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/AVL.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/E2EE_DLL.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/SEC.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/IMG_.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/IP_.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/SEC_extend.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/LinkLayerExeInterface.lib \
C:/Program\ Files/SDK30/SDK\ 9.20.0.01/SDK/lib_gnu/SSL_.lib \

#-------------------------------------------------------------------------------
# System libraries to be included during link operation
#-------------------------------------------------------------------------------
SYSTEM_LIBS     := \
-L C:/Program\ Files/Ingenico/IngeDev_722/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v343_7.20.0.1/os/win32/GNUARM/3.4.3/arm-elf/lib/thumb/soft/interwork -lsupc++ \
-L C:/Program\ Files/Ingenico/IngeDev_722/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v343_7.20.0.1/os/win32/GNUARM/3.4.3/arm-elf/lib/thumb/soft/interwork -lc \
-L C:/Program\ Files/Ingenico/IngeDev_722/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v343_7.20.0.1/os/win32/GNUARM/3.4.3/lib/gcc/arm-elf/3.4.3/thumb/soft/interwork -lgcc 

#-------------------------------------------------------------------------------
# Compilation and link input files
#-------------------------------------------------------------------------------
# Mapping file location (used during link process)
MAP_DEF_LOCATION:= $(BUILD_FILES_PATH)/$(MAPPING_DEF_NAME)

#-------------------------------------------------------------------------------
# Result output files
#-------------------------------------------------------------------------------
# Binary file
BINARY_FILE     := $(BIN_PATH)/$(TRG_FILE_NAME).BIN

#-------------------------------------------------------------------------------
# Result Listing files
#-------------------------------------------------------------------------------
# Binary file
LST_FILE     := $(OBJ_PATH)/$(TRG_FILE_NAME).lst

#-------------------------------------------------------------------------------
# Intermediate files
#-------------------------------------------------------------------------------
# Result map file location
INTER_MAP_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).map
# AXF file location
INTER_AXF_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).axf
# ELF file location
INTER_ELF_FILE  := $(OBJ_PATH)/$(TRG_FILE_NAME).elf

#-------------------------------------------------------------------------------
# Default compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Default compiler options
CC_DEF_OPTS     := -g -c -Wall -Wcast-align -mthumb-interwork -mlittle-endian -msoft-float -pipe -mcpu=arm920t -fomit-frame-pointer -fshort-enums -mstructure-size-boundary=8
# Default assembler options
AS_DEF_OPTS     := -mthumb-interwork -EL -mno-fpu
# Default linker options
LD_DEF_OPTS     :=  -Map=$(INTER_MAP_FILE)
# Default linker options
OD_DEF_OPTS     := --disassemble --source --syms

#-------------------------------------------------------------------------------
# Specific compiler, linker, assembler options
#-------------------------------------------------------------------------------
# Specific compiler options
CC_SPEC_OPTS    := -mthumb -fno-exceptions  -D_ING_RELEASE_T2
CC_SPEC_OPTS    +=  -DEMVDC -DEMVDCTAG -DLEN_AID=16 -D_EXPORT_ -D_EFT30_ -D__TELIUM2__ -D__FRAMEWORK_TELIUM_2__ -DSDK_VERSION=092000
CC_SPEC_OPTS    +=  -D_DEPRECATED_TRAP_SDK091000_ -D_DEPRECATED_MANAGER_SDK980_ -DSIMAS_TMS -D_USE_ECR -D__ISOZZSG__ -D__TELIUM__ -D_ING_APPLI_BINARY_NAME='"SIMAS"' -D_ING_APPLI_FAMILY='"SIMAS"' -D_ING_APPLI_TYPE=0x6e -D_ING_APPLI_CURRENT_CONFIG_NAME='"RELEASE_T2"' -D_ING_APPLI_FULL_BINARY_NAME='"SIMAS.AGN"' -D_ING_APPLI_TELIUM1_FULL_BINARY_NAME='"SIMAS.SGN"' -D_ING_APPLI_TELIUM2_FULL_BINARY_NAME='"SIMAS.AGN"' -D_ING_APPLI_TELIUM_COMPATIBILITY='"Telium 2"' -D_ING_APPLI_SIGN_MODE='"Unsigned"' -D_ING_APPLI_CATALOG_FILE_EXTENSION='"${appli_catalog_file_extension}"' -D_ING_APPLI_CURRENT_CONFIG_TOOLCHAIN_ROOT_LOCATION='"C:/Program\ Files/Ingenico/IngeDev_722/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v343_7.20.0.1/os/win32/GNUARM/3.4.3"' -DDUMP_ISO_MESSAGE -DSAMBUNG_KE_NAC -DLINE_ENCRYPTION -D_TELIUM_2_ -DPREPAID -DABSENSI_NOT -DDEBUG_PREPAID_DATA_NOT -DTEST_REVERSAL_NOT -DTEST_BRI_NOT -D_DEBUG_TLE_NOT $(INCLUDES_PATH)
# Specific assembler options
AS_SPEC_OPTS    := -mthumb  --defsym _ING_RELEASE_T2=1
AS_SPEC_OPTS    +=  --defsym EMVDC=1 --defsym EMVDCTAG=1 --defsym LEN_AID=16 --defsym _EXPORT_=1 --defsym _EFT30_=1 --defsym __TELIUM2__=1 --defsym __FRAMEWORK_TELIUM_2__=1 --defsym SDK_VERSION=092000
AS_SPEC_OPTS    +=  --defsym _DEPRECATED_TRAP_SDK091000_=1 --defsym _DEPRECATED_MANAGER_SDK980_=1 --defsym SIMAS_TMS=1 --defsym _USE_ECR=1 --defsym __ISOZZSG__=1 --defsym __TELIUM__=1 --defsym _ING_APPLI_BINARY_NAME='"SIMAS"' --defsym _ING_APPLI_FAMILY='"SIMAS"' --defsym _ING_APPLI_TYPE=0x6e --defsym _ING_APPLI_CURRENT_CONFIG_NAME='"RELEASE_T2"' --defsym _ING_APPLI_FULL_BINARY_NAME='"SIMAS.AGN"' --defsym _ING_APPLI_TELIUM1_FULL_BINARY_NAME='"SIMAS.SGN"' --defsym _ING_APPLI_TELIUM2_FULL_BINARY_NAME='"SIMAS.AGN"' --defsym _ING_APPLI_TELIUM_COMPATIBILITY='"Telium 2"' --defsym _ING_APPLI_SIGN_MODE='"Unsigned"' --defsym _ING_APPLI_CATALOG_FILE_EXTENSION='"${appli_catalog_file_extension}"' --defsym _ING_APPLI_CURRENT_CONFIG_TOOLCHAIN_ROOT_LOCATION='"C:/Program\ Files/Ingenico/IngeDev_722/plugins/com.ingenico.ingedev.telium.bin.win32.gnuarm.v343_7.20.0.1/os/win32/GNUARM/3.4.3"' --defsym DUMP_ISO_MESSAGE=1 --defsym SAMBUNG_KE_NAC=1 --defsym LINE_ENCRYPTION=1 --defsym _TELIUM_2_=1 --defsym PREPAID=1 --defsym ABSENSI_NOT=1 --defsym DEBUG_PREPAID_DATA_NOT=1 --defsym TEST_REVERSAL_NOT=1 --defsym TEST_BRI_NOT=1 --defsym _DEBUG_TLE_NOT=1 $(INCLUDES_PATH)
# Specific linker options
LD_SPEC_OPTS    := 

#-------------------------------------------------------------------------------
# Compiler, linker, assembler options
# default + specific options
#-------------------------------------------------------------------------------
# Compiler options
CC_OPTS         := $(CC_DEF_OPTS) $(CC_SPEC_OPTS)
# Assembler options
AS_OPTS         := $(AS_DEF_OPTS) $(AS_SPEC_OPTS)
# Linker options
LD_OPTS         := $(LD_DEF_OPTS) $(LD_SPEC_OPTS)
#ObjDump options
OD_OPTS         := $(OD_DEF_OPTS) 

#-------------------------------------------------------------------------------
# SRC_OBJS is the list of the project object files
#-------------------------------------------------------------------------------
SRC_OBJS        := \
$(OBJ_PATH)/trc.o \
$(OBJ_PATH)/tbx.o \
$(OBJ_PATH)/tlm.o \
$(OBJ_PATH)/tlmhmi.o \
$(OBJ_PATH)/tlmmem.o \
$(OBJ_PATH)/std.o \
$(OBJ_PATH)/fmt.o \
$(OBJ_PATH)/dba.o \
$(OBJ_PATH)/drv.o \
$(OBJ_PATH)/dlg.o \
$(OBJ_PATH)/Main.o \
$(OBJ_PATH)/sgm.o \
$(OBJ_PATH)/map.o \
$(OBJ_PATH)/dft.o \
$(OBJ_PATH)/rpt.o \
$(OBJ_PATH)/scr.o \
$(OBJ_PATH)/str.o \
$(OBJ_PATH)/hdl.o \
$(OBJ_PATH)/val.o \
$(OBJ_PATH)/adm.o \
$(OBJ_PATH)/emv.o \
$(OBJ_PATH)/function.o \
$(OBJ_PATH)/iso.o \
$(OBJ_PATH)/log.o \
$(OBJ_PATH)/onl.o \
$(OBJ_PATH)/pmt.o \
$(OBJ_PATH)/req.o \
$(OBJ_PATH)/rev.o \
$(OBJ_PATH)/rsp.o \
$(OBJ_PATH)/tle.o \
$(OBJ_PATH)/cmm.o \
$(OBJ_PATH)/tlmchn.o \
$(OBJ_PATH)/tlmcry.o \
$(OBJ_PATH)/tlmemv.o \
$(OBJ_PATH)/tcan0020.o \
$(OBJ_PATH)/BRI.o \
$(OBJ_PATH)/LineEncryption.o \
$(OBJ_PATH)/AES.o \
$(OBJ_PATH)/keyinject.o \
$(OBJ_PATH)/prepaid.o \
$(OBJ_PATH)/logon.o \
$(OBJ_PATH)/rsagen.o \
$(OBJ_PATH)/prsa.o \
$(OBJ_PATH)/bignum.o \
$(OBJ_PATH)/havege.o \
$(OBJ_PATH)/timing.o \

#-------------------------------------------------------------------------------
# Dependencies
#-------------------------------------------------------------------------------
DEPENDENCIES    := \
$(BUILD_FILES_PATH)/makefile.mk

#===============================================================================
# Rule to make the project
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the binary files generation
#-------------------------------------------------------------------------------
$(BINARY_FILE): $(INTER_ELF_FILE) \

	$(OBJ_COPY) -O binary $(INTER_AXF_FILE) $@
	@$(PRINTF) "'$@' binary file generated.\n"

#===============================================================================
# Rule for the link process
#===============================================================================
#-------------------------------------------------------------------------------
# Rule for the axf file generation
#-------------------------------------------------------------------------------
$(INTER_AXF_FILE): $(MAP_DEF_LOCATION) $(SRC_OBJS) $(LIBS)
	@$(PRINTF) "'$@' link in progress...\n"
	@$(CP) "C:\Program Files\Ingenico\IngeDev_722\plugins\com.ingenico.ingedev.telium.core_7.22.2.1\defaultSystemFiles\Obj\gnu_arm\$(STARTUP_OBJ_NAME)" "$(OBJ_PATH)"
	$(LD) $(LD_OPTS) -T $< -o $@ $(SRC_OBJS) $(OBJ_PATH)/$(STARTUP_OBJ_NAME) -\( $(LIBS) -\) $(SYSTEM_LIBS)

#-------------------------------------------------------------------------------
# Rule for the elf file generation
#-------------------------------------------------------------------------------
$(INTER_ELF_FILE): $(INTER_AXF_FILE)
	$(SIZE) -A $< > $@

#===============================================================================
# Rule for the .lst Generation
#===============================================================================
$(LST_FILE): $(INTER_AXF_FILE)
	$(OBJ_DUMP) $(OD_OPTS) $<  > $@
	@$(PRINTF) "'$@' lst file generated.\n"

#===============================================================================
# Rule for the compilation process
#===============================================================================
ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/trc.d
endif
$(OBJ_PATH)/trc.o: ../uta100407/sys/trc.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/trc.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/trc.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tbx.d
endif
$(OBJ_PATH)/tbx.o: ../uta100407/sys/tbx.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tbx.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tbx.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlm.d
endif
$(OBJ_PATH)/tlm.o: ../uta100407/sys/tlm.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlm.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlm.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlmhmi.d
endif
$(OBJ_PATH)/tlmhmi.o: ../uta100407/sys/tlmhmi.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlmhmi.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlmhmi.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlmmem.d
endif
$(OBJ_PATH)/tlmmem.o: ../uta100407/sys/tlmmem.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlmmem.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlmmem.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/std.d
endif
$(OBJ_PATH)/std.o: ../uta100407/pri/std.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/pri/std.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/std.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/fmt.d
endif
$(OBJ_PATH)/fmt.o: ../uta100407/pri/fmt.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/pri/fmt.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/fmt.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/dba.d
endif
$(OBJ_PATH)/dba.o: ../uta100407/pri/dba.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/pri/dba.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/dba.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/drv.d
endif
$(OBJ_PATH)/drv.o: ../uta100407/pri/drv.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/pri/drv.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/drv.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/dlg.d
endif
$(OBJ_PATH)/dlg.o: ../uta100407/pri/dlg.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/pri/dlg.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/dlg.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/Main.d
endif
$(OBJ_PATH)/Main.o: uta/Main.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'uta/Main.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/Main.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/sgm.d
endif
$(OBJ_PATH)/sgm.o: uta/sgm.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'uta/sgm.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/sgm.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/map.d
endif
$(OBJ_PATH)/map.o: ../ISOZZSG/str/map.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/str/map.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/map.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/dft.d
endif
$(OBJ_PATH)/dft.o: ../ISOZZSG/str/dft.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/str/dft.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/dft.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/rpt.d
endif
$(OBJ_PATH)/rpt.o: ../ISOZZSG/str/rpt.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/str/rpt.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/rpt.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/scr.d
endif
$(OBJ_PATH)/scr.o: ../ISOZZSG/str/scr.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/str/scr.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/scr.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/str.d
endif
$(OBJ_PATH)/str.o: ../ISOZZSG/str/str.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/str/str.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/str.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/hdl.d
endif
$(OBJ_PATH)/hdl.o: ../ISOZZSG/log/hdl.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/hdl.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/hdl.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/val.d
endif
$(OBJ_PATH)/val.o: ../ISOZZSG/log/val.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/val.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/val.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/adm.d
endif
$(OBJ_PATH)/adm.o: ../ISOZZSG/log/adm.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/adm.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/adm.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/emv.d
endif
$(OBJ_PATH)/emv.o: ../ISOZZSG/log/emv.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/emv.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/emv.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/function.d
endif
$(OBJ_PATH)/function.o: ../ISOZZSG/log/function.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/function.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/function.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/iso.d
endif
$(OBJ_PATH)/iso.o: ../ISOZZSG/log/iso.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/iso.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/iso.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/log.d
endif
$(OBJ_PATH)/log.o: ../ISOZZSG/log/log.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/log.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/log.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/onl.d
endif
$(OBJ_PATH)/onl.o: ../ISOZZSG/log/onl.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/onl.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/onl.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/pmt.d
endif
$(OBJ_PATH)/pmt.o: ../ISOZZSG/log/pmt.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/pmt.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/pmt.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/req.d
endif
$(OBJ_PATH)/req.o: ../ISOZZSG/log/req.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/req.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/req.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/rev.d
endif
$(OBJ_PATH)/rev.o: ../ISOZZSG/log/rev.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/rev.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/rev.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/rsp.d
endif
$(OBJ_PATH)/rsp.o: ../ISOZZSG/log/rsp.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/rsp.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/rsp.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tle.d
endif
$(OBJ_PATH)/tle.o: ../ISOZZSG/log/tle.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/tle.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tle.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/cmm.d
endif
$(OBJ_PATH)/cmm.o: ../uta100407/sys/cmm.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/cmm.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/cmm.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlmchn.d
endif
$(OBJ_PATH)/tlmchn.o: ../uta100407/sys/tlmchn.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlmchn.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlmchn.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlmcry.d
endif
$(OBJ_PATH)/tlmcry.o: ../uta100407/sys/tlmcry.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlmcry.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlmcry.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tlmemv.d
endif
$(OBJ_PATH)/tlmemv.o: ../uta100407/sys/tlmemv.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/sys/tlmemv.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tlmemv.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/tcan0020.d
endif
$(OBJ_PATH)/tcan0020.o: ../uta100407/tst/an/tcan0020.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../uta100407/tst/an/tcan0020.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/tcan0020.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/BRI.d
endif
$(OBJ_PATH)/BRI.o: ../ISOZZSG/log/BRI.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/BRI.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/BRI.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/LineEncryption.d
endif
$(OBJ_PATH)/LineEncryption.o: ../ISOZZSG/log/LineEncryption.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/LineEncryption.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/LineEncryption.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/AES.d
endif
$(OBJ_PATH)/AES.o: ../ISOZZSG/log/AES.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/AES.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/AES.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/keyinject.d
endif
$(OBJ_PATH)/keyinject.o: ../ISOZZSG/log/keyinject.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/keyinject.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/keyinject.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/prepaid.d
endif
$(OBJ_PATH)/prepaid.o: ../ISOZZSG/log/prepaid.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/prepaid.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/prepaid.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/logon.d
endif
$(OBJ_PATH)/logon.o: ../ISOZZSG/log/logon.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/logon.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/logon.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/rsagen.d
endif
$(OBJ_PATH)/rsagen.o: ../ISOZZSG/log/rsagen.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/rsagen.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/rsagen.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/prsa.d
endif
$(OBJ_PATH)/prsa.o: ../ISOZZSG/log/prsa.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/prsa.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/prsa.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/bignum.d
endif
$(OBJ_PATH)/bignum.o: ../ISOZZSG/log/bignum.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/bignum.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/bignum.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/havege.d
endif
$(OBJ_PATH)/havege.o: ../ISOZZSG/log/havege.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/havege.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/havege.o)
	@$(PRINTF) "done!\n"
endif

ifneq ($(MAKECMDGOALS), clean)
-include $(OBJ_PATH)/timing.d
endif
$(OBJ_PATH)/timing.o: ../ISOZZSG/log/timing.c $(DEPENDENCIES) $(EXTRA_DEPENDENCIES)
	@$(PRINTF) "'../ISOZZSG/log/timing.c' compilation in progress...\n"
	$(CC) $(CC_OPTS) -MMD -MP -o "$@" "$<"
ifeq ($(MAKECMDGOALS), $(OBJ_PATH)/timing.o)
	@$(PRINTF) "done!\n"
endif

#===============================================================================
# Rule for project name and configuration name display
#===============================================================================
.PHONY: displayInfo
displayInfo:
	@$(PRINTF) "                                     *-*-*\n"
	@$(PRINTF) "--- Project '$(PROJECT_NAME)', Configuration '$(CFG_NAME)', Compiler '$(COMPILER_VERSION)' ---\n"

#===============================================================================
# Rule for build target progress info display
#===============================================================================
.PHONY: displayBuildInProgress
displayBuildInProgress:
	@$(PRINTF) "Build in progress...\n"

#===============================================================================
# Rule for output directories creation
#===============================================================================
.PHONY: createOutputDirs
createOutputDirs:
	@$(MKDIR) "$(OBJ_PATH)"
	@$(MKDIR) "$(BIN_PATH)"

#===============================================================================
# Make build rule
#===============================================================================
.PHONY: build
build: displayInfo displayBuildInProgress createOutputDirs $(BINARY_FILE)
	@$(PRINTF) "done!\n"

#===============================================================================
# Make clean rule
#===============================================================================
.PHONY: clean
clean: displayInfo
	@$(PRINTF) "deleting intermediate files...\n"
	@$(RM) "$(BINARY_FILE)"
ifneq "$(wildcard $(OBJ_PATH)/*.*)" ""
	@$(RM) "$(OBJ_PATH)/*.*"
endif
	@$(PRINTF) "done!\n"
